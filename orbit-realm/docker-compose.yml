services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    container_name: orbit-realm-nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - certbot_www:/var/www/certbot
      - certbot_etc:/etc/letsencrypt
    networks:
      - orbit-network
    restart: unless-stopped

  postgres:
    image: postgres:15
    container_name: orbit-postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: odoo
      POSTGRES_PASSWORD: odoo_password
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data/pgdata
    ports:
      - 5433:5432
    networks:
      - orbit-network
    restart: unless-stopped

  odoo:
    image: odoo:18.0
    container_name: orbit-odoo
    depends_on:
      - postgres
    environment:
      HOST: postgres
      USER: odoo
      PASSWORD: odoo_password
    volumes:
      - odoo_data:/var/lib/odoo
      - ./odoo/config:/etc/odoo
      - ./odoo/addons:/mnt/extra-addons
    ports:
      - 8069:8069
    networks:
      - orbit-network
    restart: unless-stopped

  certbot:
    image: certbot/certbot:latest
    container_name: orbit-certbot
    volumes:
      - certbot_www:/var/www/certbot
      - certbot_etc:/etc/letsencrypt
    networks:
      - orbit-network
    restart: unless-stopped

  certbot_renew:
    image: certbot/certbot:latest
    container_name: orbit-certbot-renew
    entrypoint: /bin/sh
    command: -c "while :; do certbot renew --webroot -w /var/www/certbot --quiet --agree-tos; sleep 12h; done"
    volumes:
      - certbot_www:/var/www/certbot
      - certbot_etc:/etc/letsencrypt
    networks:
      - orbit-network
    restart: unless-stopped

networks:
  orbit-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  odoo_data:
    driver: local
  certbot_www:
    driver: local
  certbot_etc:
    driver: local
